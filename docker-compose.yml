services:
  # React App Container (unchanged)
  tracker-react:
    build:
      context: .
      dockerfile: Dockerfile.react
    container_name: tracker-react
    restart: always
    env_file:
      - .env
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/workspace/frontend
      - ./frontend/node_modules:/workspace/frontend/node_modules
    networks:
      - traefik_network
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blender-react.rule=Host(`blenderUI.benjaminf.net`)"
      - "traefik.http.services.blender-react.loadbalancer.server.port=80"

  # Blender Container
  tracker_blender:
    build:
      context: .
      dockerfile: Dockerfile.blender
    container_name: tracker_blender
    env_file:
      - .env
    volumes:
      - ./config:/config
      - ./workspace:/workspace
    ports:
      - "55001:55001" 
    restart: unless-stopped
    networks:
      - traefik_network
      - internal
    command: /workspace/startBlender.sh
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blender.rule=Host(`blender.benjaminf.net`)"
      - "traefik.http.services.blender.loadbalancer.server.port=55001"
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [compute, video, graphics, utility, display]

  tracker_mysql:
    image: mysql:8.0
    container_name: tracker_mysql
    restart: unless-stopped
    ports:
      - "3309:3306" # no traefik routing here, only exposed port
    env_file:
      - .env
    volumes:
      - ./data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/my.cnf
    networks:
      - internal
      
  tracker_mqtt:
    build:
      context: .
      dockerfile: Dockerfile.mqtt
    container_name: tracker_mqtt
    restart: unless-stopped
    ports:
      - "1884:1883" # no traefik routing here, only exposed port
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - internal
      - bridge


networks:
  traefik_network:
    external: true
  internal:
    internal: true
  bridge:
    internal: false
